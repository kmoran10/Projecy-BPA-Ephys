summarise(across(where(is.numeric), mean), .groups = "drop")
View(timepoint_avgs)
# Step 2: Calculate Y12 - Y34 differences
time_diffs <- timepoint_avgs %>%
pivot_wider(names_from = time_group, values_from = where(is.numeric)) %>%
mutate(across(ends_with("Y12"), .names = "diff_{.col}") -
across(ends_with("Y34"))) %>%
select(subject, drug, starts_with("diff"))
View(time_diffs)
# M-current
library(tidyverse)
library(ggpubr)
source("functions/geom_boxjitter.R")
rie <- read.csv("rawdata/rmp-impre-epsc-data.csv")
mcd <- read.csv("rawdata/mc-data.csv")
rie.id <- rie %>% select(subject,slice,pnd,group)
tmcd <- as.data.frame(t(mcd))
names(tmcd) <- lapply(tmcd[1, ], as.character)
tmcd <- tmcd[-1,]
tmcd1 <- tibble::rownames_to_column(tmcd, "ID")
tmcd2 <- tmcd1 %>%
separate(ID, into = c("mc.tp", "subject"), sep = "_", remove = TRUE) %>%
select(subject, everything()) %>%
separate(mc.tp, into = c("drug", "tp"), sep = "\\.", remove = TRUE) %>%
select(subject, everything())
mcd3 <- left_join(rie.id,tmcd2, by="subject")
mcd4 <- mcd3[!is.na(mcd3$drug),]
View(mcd4)
View(mcd4)
# 1. First get Y12 (Y1/Y2 average) and Y34 (Y3/Y4 average) for each subject/drug
avg_by_period <- mcd4 %>%
filter(tp %in% c("Y1", "Y2", "Y3", "Y4")) %>%
mutate(period = if_else(tp %in% c("Y1", "Y2"), "Y12", "Y34")) %>%
group_by(subject, drug, period) %>%
summarise(across(where(is.numeric), mean), .groups = "drop")
View(avg_by_period)
# 2. Calculate Y12 - Y34 differences for each subject/drug combo
period_differences <- avg_by_period %>%
pivot_wider(names_from = period, values_from = where(is.numeric)) %>%
mutate(across(starts_with("Y12"), .names = "diff_{.col}") -
across(starts_with("Y34"))) %>%
select(subject, drug, starts_with("diff"))
# 2. Calculate Y12 - Y34 differences for each subject/drug combo
period_differences <- avg_by_period %>%
pivot_wider(names_from = period, values_from = where(is.numeric)) %>%
mutate(across(starts_with("Y12"), .names = "diff_{.col}") -
across(starts_with("Y34"))) %>%
select(subject, drug, starts_with("diff"))
library(tidyverse)
library(ggpubr)
source("functions/geom_boxjitter.R")
rie <- read.csv("rawdata/rmp-impre-epsc-data.csv")
mcd <- read.csv("rawdata/mc-data.csv")
rie.id <- rie %>% select(subject,slice,group)
tmcd <- as.data.frame(t(mcd))
names(tmcd) <- lapply(tmcd[1, ], as.character)
tmcd <- tmcd[-1,]
tmcd1 <- tibble::rownames_to_column(tmcd, "ID")
tmcd2 <- tmcd1 %>%
separate(ID, into = c("mc.tp", "subject"), sep = "_", remove = TRUE) %>%
select(subject, everything()) %>%
separate(mc.tp, into = c("drug", "tp"), sep = "\\.", remove = TRUE) %>%
select(subject, everything())
mcd3 <- left_join(rie.id,tmcd2, by="subject")
mcd4 <- mcd3[!is.na(mcd3$drug),]
View(mcd4)
mc.pro <- mcd4 %>%
select(1:4) %>%
distinct() %>%
expand_grid(drug = c("TTX", "XE")) %>%
left_join(
mcd4 %>%
filter(tp %in% c("Y1", "Y2", "Y3", "Y4")) %>%
pivot_longer(cols = 6:16) %>%
mutate(period = if_else(tp %in% c("Y1", "Y2"), "Y1Y2", "Y3Y4")) %>%
group_by(subject, drug = substr(drug, 1, 3), period, name) %>%
summarise(avg = mean(value), .groups = "drop") %>%
pivot_wider(names_from = period, values_from = avg) %>%
mutate(diff = Y1Y2 - Y3Y4) %>%
group_by(subject, drug, name) %>%
summarise(avg_diff = mean(diff), .groups = "drop") %>%
pivot_wider(names_from = name, values_from = avg_diff),
by = c("subject", "drug")
)
mc.pro <- mcd4 %>%
select(1:4) %>%
distinct() %>%
mutate(drug_original = drug) %>%  # Preserve original drug column
expand_grid(new_drug = c("TTX", "XE")) %>%  # Create new drug categories
left_join(
mcd4 %>%
filter(tp %in% c("Y1", "Y2", "Y3", "Y4")) %>%
pivot_longer(cols = 6:16) %>%
mutate(period = if_else(tp %in% c("Y1", "Y2"), "Y1Y2", "Y3Y4"),
drug_group = substr(drug, 1, 3)) %>%  # Create drug groups
group_by(subject, drug_group, period, name) %>%
summarise(avg = mean(value), .groups = "drop") %>%
pivot_wider(names_from = period, values_from = avg) %>%
mutate(diff = Y1Y2 - Y3Y4) %>%
group_by(subject, drug_group, name) %>%
summarise(avg_diff = mean(diff), .groups = "drop") %>%
pivot_wider(names_from = name, values_from = avg_diff) %>%
rename(drug = drug_group),  # Rename to match join column
by = c("subject", "new_drug" = "drug")
) %>%
select(-drug_original) %>%  # Remove the temporary column
rename(drug = new_drug)  # Rename to final column name
# First create the summary data with drug groupings
summary_data <- mcd4 %>%
filter(tp %in% c("Y1", "Y2", "Y3", "Y4")) %>%
mutate(drug_group = case_when(
drug %in% c("TTX1", "TTX2") ~ "TTX",
drug %in% c("XE1", "XE2") ~ "XE",
TRUE ~ NA_character_
)) %>%
pivot_longer(cols = 6:16) %>%
mutate(period = if_else(tp %in% c("Y1", "Y2"), "Y1Y2", "Y3Y4")) %>%
group_by(subject, drug_group, period, name) %>%
summarise(avg = mean(value), .groups = "drop") %>%
pivot_wider(names_from = period, values_from = avg) %>%
mutate(diff = Y1Y2 - Y3Y4) %>%
group_by(subject, drug_group, name) %>%
summarise(avg_diff = mean(diff), .groups = "drop") %>%
pivot_wider(names_from = name, values_from = avg_diff) %>%
rename(drug = drug_group)
# Then create the final output by joining with distinct subject info
mc.pro <- mcd4 %>%
select(1:4) %>%
distinct(subject, .keep_all = TRUE) %>%
expand_grid(drug = c("TTX", "XE")) %>%
left_join(summary_data, by = c("subject", "drug"))
View(summary_data)
View(mcd4)
summary_data2 <- mcd4 %>%
filter(tp %in% c("Y1", "Y2", "Y3", "Y4")) %>%
mutate(
drug_group = case_when(
drug %in% c("TTX1", "TTX2") ~ "TTX",
drug %in% c("XE1", "XE2") ~ "XE",
TRUE ~ NA_character_
),
group = group  # Explicitly keep the group column
) %>%
pivot_longer(cols = 6:16) %>%
mutate(period = if_else(tp %in% c("Y1", "Y2"), "Y1Y2", "Y3Y4")) %>%
group_by(subject, group, drug_group, period, name) %>%  # Include group in grouping
summarise(avg = mean(value), .groups = "drop") %>%
pivot_wider(names_from = period, values_from = avg) %>%
mutate(diff = Y1Y2 - Y3Y4) %>%
group_by(subject, group, drug_group, name) %>%  # Include group in final grouping
summarise(avg_diff = mean(diff), .groups = "drop") %>%
pivot_wider(names_from = name, values_from = avg_diff) %>%
rename(drug = drug_group)
View(summary_data2)
summary_data <- mcd4 %>%
filter(tp %in% c("Y1", "Y2", "Y3", "Y4")) %>%
mutate(
drug_group = case_when(
drug %in% c("TTX1", "TTX2") ~ "TTX",
drug %in% c("XE1", "XE2") ~ "XE",
TRUE ~ NA_character_
),
group = group
) %>%
pivot_longer(cols = 6:16) %>%
# Remove NA values before calculations
filter(!is.na(value)) %>%
mutate(period = if_else(tp %in% c("Y1", "Y2"), "Y1Y2", "Y3Y4")) %>%
group_by(subject, group, drug_group, period, name) %>%
summarise(
avg = mean(value, na.rm = TRUE),  # na.rm for additional protection
.groups = "drop"
) %>%
pivot_wider(names_from = period, values_from = avg) %>%
mutate(
diff = if_else(
is.na(Y1Y2) | is.na(Y3Y4),
NA_real_,  # Return NA if either period is completely missing
Y1Y2 - Y3Y4
)
) %>%
group_by(subject, group, drug_group, name) %>%
summarise(
avg_diff = mean(diff, na.rm = TRUE),  # Will ignore NA diffs
.groups = "drop"
) %>%
pivot_wider(names_from = name, values_from = avg_diff) %>%
rename(drug = drug_group)
rm(summary_data2)
View(summary_data)
rm(summary_data)
mc.pro <- mcd4 %>%
filter(tp %in% c("Y1", "Y2", "Y3", "Y4")) %>%
mutate(
drug_group = case_when(
drug %in% c("TTX1", "TTX2") ~ "TTX",
drug %in% c("XE1", "XE2") ~ "XE",
TRUE ~ NA_character_
),
group = group
) %>%
pivot_longer(cols = 6:16) %>%
# Remove NA values before calculations
filter(!is.na(value)) %>%
mutate(period = if_else(tp %in% c("Y1", "Y2"), "Y1Y2", "Y3Y4")) %>%
group_by(subject, group, drug_group, period, name) %>%
summarise(
avg = mean(value, na.rm = TRUE),  # na.rm for additional protection
.groups = "drop"
) %>%
pivot_wider(names_from = period, values_from = avg) %>%
mutate(
diff = if_else(
is.na(Y1Y2) | is.na(Y3Y4),
NA_real_,  # Return NA if either period is completely missing
Y1Y2 - Y3Y4
)
) %>%
group_by(subject, group, drug_group, name) %>%
summarise(
avg_diff = mean(diff, na.rm = TRUE),  # Will ignore NA diffs
.groups = "drop"
) %>%
pivot_wider(names_from = name, values_from = avg_diff) %>%
rename(drug = drug_group)
View(mc.pro)
mcpro.long <- mc.pro %>%
pivot_longer(col = c(4:14), names_to = "mV", values_to = "pA")
View(mcpro.long)
mcpro.long %>%
filter(drug == "TTX") %>%
ggplot(., aes(mV, pA, color = "group")) +
geom_point() +
geom_smooth(method = lm, formula = y ~ splines::bs(x, 3), se = FALSE)
mcpro.long %>%
filter(drug == "TTX") %>%
ggplot(., aes(mV, pA),color = "group") +
geom_point() +
geom_smooth(method = lm, formula = y ~ splines::bs(x, 3), se = FALSE)
mcpro.long$mV <- as.numeric(mcpro.long$mV)
mcpro.long %>%
filter(drug == "TTX") %>%
ggplot(., aes(mV, pA),color = "group") +
geom_point() +
geom_smooth(method = lm, formula = y ~ splines::bs(x, 3), se = FALSE)
mcpro.long %>%
filter(drug == "TTX") %>%
ggplot(., aes(mV, pA),color = "group") +
geom_point() +
geom_smooth(method = lm, formula = y ~ splines::bs(x, 3), se = T)
mcpro.long %>%
filter(drug == "TTX") %>%
ggplot(., aes(mV, pA, color = "group")) +
geom_point() +
geom_smooth(method = lm, formula = y ~ splines::bs(x, 3), se = T)
mcpro.long$group <- as.factor(mcpro.long$group)
mcpro.long %>%
filter(drug == "TTX") %>%
ggplot(., aes(mV, pA, color = "group")) +
geom_point() +
geom_smooth(method = lm, formula = y ~ splines::bs(x, 3), se = T)
mcpro.long <- mc.pro %>%
pivot_longer(col = c(4:14), names_to = "mV", values_to = "pA")
mcpro.long$mV <- as.numeric(mcpro.long$mV)
mcpro.long$group <- as.factor(mcpro.long$group)
mcpro.long %>%
filter(drug == "TTX") %>%
ggplot(., aes(mV, pA, color = "group")) +
geom_point() +
geom_smooth(method = lm, formula = y ~ splines::bs(x, 3), se = T)
mcpro.long %>%
filter(drug == "TTX") %>%
ggplot(., aes(mV, pA), color = "group") +
geom_point() +
geom_smooth(method = lm, formula = y ~ splines::bs(x, 3), se = T)
mcpro.long %>%
filter(drug == "TTX") %>%
ggplot(., aes(mV, pA)) +
geom_point() +
geom_smooth(method = lm, formula = y ~ splines::bs(x, 3), se = T, color = "group")
mcpro.long %>%
filter(drug == "TTX") %>%
ggplot(., aes(mV, pA), color == "group") +
geom_point() +
geom_smooth(method = lm, formula = y ~ splines::bs(x, 3), se = T)
, color == "group"
mcpro.long %>%
filter(drug == "TTX") %>%
ggplot(., aes(mV, pA, color == "group")) +
geom_point() +
geom_smooth(method = lm, formula = y ~ splines::bs(x, 3), se = T)
mcpro.long %>%
filter(drug == "TTX") %>%
ggplot(., aes(mV, pA, color == "group")) +
geom_point() +
geom_smooth(method = lm, formula = y ~ splines::bs(x, 3), se = T)
mcpro.long %>%
filter(drug == "TTX") %>%
ggplot(., aes(mV, pA, color = "group")) +
geom_point() +
geom_smooth(method = lm, formula = y ~ splines::bs(x, 3), se = T)
mcpro.long %>%
filter(drug == "TTX") %>%
ggplot(., aes(mV, pA, colour = "group")) +
geom_point() +
geom_smooth(method = lm, formula = y ~ splines::bs(x, 3), se = T)
mcpro.long %>%
filter(drug == "TTX") %>%
ggplot(., aes(mV, pA, group = "group", color = "group")) +
geom_point() +
geom_smooth(method = lm, formula = y ~ splines::bs(x, 3), se = T)
mcpro.long %>%
filter(drug == "TTX") %>%
ggplot(., aes(mV, pA, group = "group", color = "group")) +
geom_point() +
geom_smooth(group = "group", method = lm, formula = y ~ splines::bs(x, 3), se = T)
mcpro.long %>%
filter(drug == "TTX") %>%
ggplot(., aes(mV, pA)) +
geom_point() +
geom_smooth(group = "group", method = lm, formula = y ~ splines::bs(x, 3), se = T)
mcpro.long %>%
filter(drug == "TTX") %>%
ggplot(., aes(mV, pA, color = group)) +
geom_point() +
geom_smooth(method = lm, formula = y ~ splines::bs(x, 3), se = T)
mcpro.long %>%
filter(drug == "TTX") %>%
ggplot(., aes(mV, pA, color = group)) +
geom_point() +
geom_smooth(method = lm, formula = y ~ splines::bs(x, 3), se = T) +
theme_classic()
mcpro.long %>%
filter(drug == "TTX") %>%
ggplot(., aes(mV, pA, color = group)) +
geom_point() +
geom_smooth(method = lm, formula = y ~ splines::bs(x, 3), se = T) +
theme_classic() +
ggtitle(TTX)
mcpro.long %>%
filter(drug == "TTX") %>%
ggplot(., aes(mV, pA, color = group)) +
geom_point() +
geom_smooth(method = lm, formula = y ~ splines::bs(x, 3), se = T) +
theme_classic() +
ggtitle(TTX)
mcpro.long %>%
filter(drug == "TTX") %>%
ggplot(., aes(mV, pA, color = group)) +
geom_point() +
geom_smooth(method = lm, formula = y ~ splines::bs(x, 3), se = T) +
theme_classic() +
ggtitle("TTX")
mcpro.long %>%
filter(drug == "TTX") %>%
ggplot(., aes(mV, pA, color = group)) +
geom_point() +
geom_smooth(method = lm, formula = y ~ splines::bs(x, 3), se = T) +
theme_classic() +
ggtitle("Outward Current (TTX)")
mcpro.long %>%
filter(drug == "XE") %>%
ggplot(., aes(mV, pA, color = group)) +
geom_point() +
geom_smooth(method = lm, formula = y ~ splines::bs(x, 3), se = T) +
theme_classic() +
ggtitle("Outward Current (XE)")
mc_diff <- mc.pro %>%
select(subject, group, drug, 4:14) %>%  # Select relevant columns
pivot_longer(cols = -(1:3), names_to = "variable") %>%
pivot_wider(names_from = drug, values_from = value) %>%
mutate(MC = TTX - XE) %>%
select(subject, group, variable, MC) %>%
pivot_wider(names_from = variable, values_from = MC)
View(mc_diff)
mc.diff <- mc.pro %>%
select(subject, group, drug, 4:14) %>%  # Select relevant columns
pivot_longer(cols = -(1:3), names_to = "variable") %>%
pivot_wider(names_from = drug, values_from = value) %>%
mutate(MC = TTX - XE) %>%
select(subject, group, variable, MC) %>%
pivot_wider(names_from = variable, values_from = MC)
mc.diff.long <- mc.diff %>%
pivot_longer(col = c(3:13), names_to = "mV", values_to = "pA")
View(mc.diff.long)
ggplot(mc.diff.long, aes(mV, pA, color = group)) +
geom_point() +
geom_smooth(method = lm, formula = y ~ splines::bs(x, 3), se = T) +
theme_classic() +
ggtitle("M-Current")
mc.diff.long$mV <- as.numeric(mc.diff.long$mV)
mc.diff.long$group <- as.factor(mc.diff.long$group)
ggplot(mc.diff.long, aes(mV, pA, color = group)) +
geom_point() +
geom_smooth(method = lm, formula = y ~ splines::bs(x, 3), se = T) +
theme_classic() +
ggtitle("M-Current")
ggplot(mc.diff.long, aes(mV, pA, color = group)) +
geom_point() +
geom_smooth(method = lm, formula = y ~ splines::bs(x, 2), se = T) +
theme_classic() +
ggtitle("M-Current")
ggplot(mc.diff.long, aes(mV, pA, color = group)) +
geom_point() +
geom_smooth(method = lm, formula = y ~ splines::bs(x, 4), se = T) +
theme_classic() +
ggtitle("M-Current")
ggplot(mc.diff.long, aes(mV, pA, color = group)) +
geom_point() +
geom_smooth(method = lm, formula = y ~ splines::bs(x, 3), se = T) +
theme_classic() +
ggtitle("M-Current")
mc.diff <- mc.pro %>%
select(subject, group, drug, 4:14) %>%  # Select relevant columns
pivot_longer(cols = -(1:3), names_to = "variable") %>%
pivot_wider(names_from = drug, values_from = value) %>%
mutate(MC = TTX - XE) %>%
select(subject, group, variable, MC) %>%
pivot_wider(names_from = variable, values_from = MC)
mc.diff.long <- mc.diff %>%
pivot_longer(col = c(3:13), names_to = "mV", values_to = "pA")
mc.diff.long$mV <- as.numeric(mc.diff.long$mV)
mc.diff.long$group <- as.factor(mc.diff.long$group)
ggplot(mc.diff.long, aes(mV, pA, color = group)) +
geom_point() +
geom_smooth(method = lm, formula = y ~ splines::bs(x, 3), se = T) +
theme_classic() +
ggtitle("M-Current")
mcpro.long %>%
filter(drug == "TTX") %>%
ggplot(., aes(mV, pA, color = group)) +
geom_point() +
geom_smooth(method = lm, formula = y ~ splines::bs(x, 3), se = T) +
theme_classic() +
ggtitle("Outward Current (TTX)")
mcpro.long %>%
filter(drug == "XE") %>%
ggplot(., aes(mV, pA, color = group)) +
geom_point() +
geom_smooth(method = lm, formula = y ~ splines::bs(x, 3), se = T) +
theme_classic() +
ggtitle("Outward Current (XE)")
ggplot(mc.diff.long, aes(mV, pA, color = group)) +
geom_point() +
geom_smooth(method = lm, formula = y ~ splines::bs(x, 3), se = T) +
theme_classic() +
ggtitle("M-Current")
ggplot(mc.diff.long, aes(mV, pA, color = group)) +
geom_point() +
geom_smooth(method = lm, formula = y ~ splines::bs(x, 3), se = T) +
theme_classic() +
ggtitle("M-Current", size = 6)
ggplot(mc.diff.long, aes(mV, pA, color = group)) +
geom_point() +
geom_smooth(method = lm, formula = y ~ splines::bs(x, 3), se = T) +
theme_classic() +
ggtitle("M-Current", cex = 6)
ggplot(mc.diff.long, aes(mV, pA, color = group)) +
geom_point() +
geom_smooth(method = lm, formula = y ~ splines::bs(x, 3), se = T) +
theme_classic() +
ggtitle("M-Current (TTX-XE)")
ggplot(mc.diff.long, aes(mV, pA, color = group)) +
geom_point() +
geom_smooth(method = lm, formula = y ~ splines::bs(x, 3), se = T) +
theme_classic() +
ggtitle("M-Current (TTX-XE)") + scale_x_continuous(expand=c(0,0))
ggplot(mc.diff.long, aes(mV, pA, color = group)) +
geom_point() +
geom_smooth(method = lm, formula = y ~ splines::bs(x, 3), se = T) +
theme_classic() +
ggtitle("M-Current (TTX-XE)")
ggplot(mc.diff.long, aes(mV, pA, color = group)) +
geom_point() +
geom_smooth(method = lm, formula = y ~ splines::bs(x, 3), se = T) +
theme_classic() +
ggtitle("M-Current (TTX-XE)") +
coord_cartesian(ylim=c(0,1))
ggplot(mc.diff.long, aes(mV, pA, color = group)) +
geom_point() +
geom_smooth(method = lm, formula = y ~ splines::bs(x, 3), se = T) +
theme_classic() +
ggtitle("M-Current (TTX-XE)")
ggplot(mc.diff.long, aes(mV, pA, color = group)) +
geom_point() +
geom_smooth(method = lm, formula = y ~ splines::bs(x, 3), se = T) +
theme_classic() +
ggtitle("M-Current (TTX-XE)") +
geom_hline(yintercept=0)
mcpro.long %>%
filter(drug == "TTX") %>%
ggplot(., aes(mV, pA, color = group)) +
geom_point() +
geom_smooth(method = lm, formula = y ~ splines::bs(x, 3), se = T) +
theme_classic() +
ggtitle("Outward Current (TTX)")+
geom_hline(yintercept=0)
mcpro.long %>%
filter(drug == "XE") %>%
ggplot(., aes(mV, pA, color = group)) +
geom_point() +
geom_smooth(method = lm, formula = y ~ splines::bs(x, 3), se = T) +
theme_classic() +
ggtitle("Outward Current (XE)")+
geom_hline(yintercept=0)
ggplot(mc.diff.long, aes(mV, pA, color = group)) +
geom_point() +
geom_smooth(method = lm, formula = y ~ splines::bs(x, 3), se = T) +
theme_classic() +
ggtitle("M-Current (TTX-XE)") +
geom_hline(yintercept=0)
View(mcd4)
